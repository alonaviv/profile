Important before opening they start signing up:
1. Fix whole deletion thing (Think about the issue of the fact that evaluations are deleted when a kid is removed from
 a class, did I take care of this?)
2. Multiple chonchim/multiple teachers?
3. Email validation before signing in: https://studygyaan.com/django/how-to-signup-user-and-send-confirmation-email-in-django

Can happing slightly later
4. Setup cron jobs:
(Check out django-cronjobs and django-crontab for this)
 * Send evaluation status emails
 * Send all validation emails
 * Send urgent validation emails
 * Run ./manage dbbackup, and delete old ones (each time you create one, delete an old one - if you passed either number
  or space)
5. Write raw emails as well
6. In validation stuff, both email and site, show all kids by house category.

- Nice to have:
* Emails in RTL on gmail somehow + Make nice HTML emails (even just some bold could help)
* Downloadable PDF
* OTP login

===========

* Work on all forms of deletion:
 - Think about the fact that teachers can stop being chonchim next year and other changes that could happen between years.
 - Save evaluations that were actually deleted. Focuse on the automatic deletion of evaluations when student leaves a class/class is deleted. Not sure we ever want to delete an evaluation, we'll see. And if we do, make sure that we don't delete evaluations from previous semesters.
 - Need to change alert message when deleting student?


* See if possible to add sex to students as well, for text

* Bug - seems can't add evaluations of same trimester and different years


Important for the future, not the first one:
* When in NULL-SEMESTER, don't allow to fill out any evals, and display in the square that there are no more meetings
this year. Also make sure that nothing can get a null semester value.
* Add viewing of previous evalutions - both written by and previous for that student read (and also for all the years?
Ask them if that is OK)



======================
Additions later on:
* Filter forms by letters maybe?
* Search for a kid's name, don't just select all from a form.
use javascript to make all of this responsive.
* Add subjects that teachers in general teach to their user (can be several or none), Use that for default for all their classes when they add in a new class.
* Pagination everywhere
* Use django authentication backend instead of creating a needless username from first+last name
* Ability to upload files with the evaluations
* Cute encoureging messages as they progress through it.
